import telebot
from youtube_search import VideosSearch
import requests

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_TG_–ë–û–¢–ê"
bot = telebot.TeleBot(7666194844:AAFYrikZi0wT3qbXE3gzli8jBpaFK-VOUXc)

# Genius API —Ç–æ–∫–µ–Ω (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ https://genius.com/api-clients)
GENIUS_TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_GENIUS"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –º—É–∑—ã–∫–∏ –Ω–∞ YouTube
def search_music(query):
    videos_search = VideosSearch(query, limit=5)  # –ò—â–µ–º –¥–æ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    results = videos_search.result()["result"]
    return [
        (video["title"], video["link"]) for video in results
    ] if results else None

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–µ—Å–µ–Ω –ø–æ —Ç–µ–∫—Å—Ç—É —á–µ—Ä–µ–∑ Genius API
def search_lyrics_snippet(snippet):
    headers = {"Authorization": f"Bearer {GENIUS_TOKEN}"}
    search_url = f"https://api.genius.com/search?q={snippet}"
    response = requests.get(search_url, headers=headers)
    if response.status_code == 200:
        data = response.json()["response"]["hits"]
        return [
            {
                "title": hit["result"]["title"],
                "artist": hit["result"]["primary_artist"]["name"],
                "url": hit["result"]["url"]
            }
            for hit in data
        ]
    else:
        return None

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
@bot.message_handler(commands=["start", "help"])
def send_welcome(message):
    bot.reply_to(
        message,
        "*–ü—Ä–∏–≤–µ—Ç!*\n–Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É –ø–æ –ø—Ä–∏–º–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É, —Å–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫ –∏–ª–∏ –ø—Ä–æ—Å–ª—É—à–∞—Ç—å üéµ.\n\n–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –ø–µ—Å–Ω–∏ –∏–ª–∏ —Å—Ç—Ä–æ—á–∫—É –∏–∑ –Ω–µ–µ!"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(func=lambda message: True)
def handle_message(message):
    query = message.text.strip()
    bot.reply_to(message, f"*–ò—â—É —Ç—Ä–µ–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç—É:* `{query}` üé∂ –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")

    # –ò—â–µ–º –ø–µ—Å–Ω–∏ —Å –ø–æ—Ö–æ–∂–∏–º —Ç–µ–∫—Å—Ç–æ–º
    lyrics_results = search_lyrics_snippet(query)
    if lyrics_results:
        for idx, track in enumerate(lyrics_results[:5]):  # –ü–æ–∫–∞–∂–µ–º –¥–æ 5 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            bot.send_message(
                message.chat.id,
                f"*{idx + 1}. {track['title']}* - {track['artist']}\n"
                f"[–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ Genius]({track['url']})"
            )

        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫ –∏ –∏—â–µ–º –≤ YouTube
        first_song = lyrics_results[0]
        youtube_results = search_music(first_song["title"])
        if youtube_results:
            bot.send_message(
                message.chat.id,
                f"*–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å—Å—ã–ª–∫–∏ YouTube:*\n" +
                "\n".join([f"[{yt[0]}]({yt[1]})" for yt in youtube_results])
            )
        else:
            bot.send_message(
                message.chat.id,
                "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –≤–∏–¥–µ–æ –Ω–∞ YouTube."
            )
    else:
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–µ—Å–Ω–∏ —Å —Ç–∞–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
